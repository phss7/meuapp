{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, Input, Text, Header, icon } from 'react-native-elements';\nimport { useState } from 'react';\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport FlashMessage from \"react-native-flash-message\";\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyCcHkr8IxdShZZkhtlCLgxuv-O6UlAQzLc\",\n    authDomain: \"app-pos-978d2.firebaseapp.com\",\n    projectId: \"app-pos-978d2\",\n    storageBucket: \"app-pos-978d2.appspot.com\",\n    messagingSenderId: \"36916146115\",\n    appId: \"1:36916146115:web:15751c5320a22bf5771776\"\n  };\n  var auth = getAuth();\n  createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n    showMessage({\n      message: \"Registro Adicionado com Sucesso!!\",\n      type: \"success\"\n    });\n    Alert.alert(\"Sucesso\", \"Cadastro bem sucedido\");\n    console.log('Cadastro realizado com sucesso');\n    var user = userCredential.user;\n\n    isVisible: true;\n\n    Message: \"Cadastro realizado com sucesso\";\n  }).catch(function (error) {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n  });\n  var app = initializeApp(firebaseConfig);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      h1: true\n    }), _jsx(Input, {\n      placeholder: \"email\",\n      leftIcon: {\n        type: 'font-awesome',\n        name: ''\n      },\n      onChangeText: function onChangeText(value) {\n        return setEmail(value);\n      },\n      keyboardType: \"email-address\"\n    }), _jsx(Input, {\n      placeholder: \"senha\",\n      leftIcon: {\n        type: 'font-awesome',\n        name: ''\n      },\n      onChangeText: function onChangeText(value) {\n        return setPassword(value);\n      },\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: 'Salvar',\n      containerStyle: {\n        width: 200,\n        marginHorizontal: 50,\n        marginVertical: 10\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/priscila/meuapp/screens/CadastroScreen.js"],"names":["StatusBar","NavigationContainer","createNativeStackNavigator","Button","Input","Text","Header","icon","useState","initializeApp","getAuth","createUserWithEmailAndPassword","FlashMessage","showMessage","hideMessage","App","email","setEmail","password","setPassword","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","then","userCredential","message","type","Alert","alert","console","log","user","isVisible","Message","catch","error","errorCode","code","errorMessage","app","styles","container","name","value","width","marginHorizontal","marginVertical","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { Alert, StyleSheet, View, } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, Input, Text, Header, icon } from 'react-native-elements';\nimport { useState } from 'react';\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport FlashMessage from \"react-native-flash-message\";\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\n\n\nexport default function App() {\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCcHkr8IxdShZZkhtlCLgxuv-O6UlAQzLc\",\n    authDomain: \"app-pos-978d2.firebaseapp.com\",\n    projectId: \"app-pos-978d2\",\n    storageBucket: \"app-pos-978d2.appspot.com\",\n    messagingSenderId: \"36916146115\",\n    appId: \"1:36916146115:web:15751c5320a22bf5771776\"\n  };\n\n  const auth = getAuth();\ncreateUserWithEmailAndPassword(auth, email, password)\n  .then((userCredential) => {\n    // Signed in\n    showMessage({\n      message: \"Registro Adicionado com Sucesso!!\",\n      type: \"success\",\n    });\n    Alert.alert(\"Sucesso\", \"Cadastro bem sucedido\")\n    console.log('Cadastro realizado com sucesso');\n    const user = userCredential.user;\n      isVisible: true; \n      Message: \"Cadastro realizado com sucesso\"\n      // ...\n  })\n  .catch((error) => {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // ..\n  });\n\n  \n\n\n  // Initialize Firebase\n  const app = initializeApp(firebaseConfig);\n\n\n  return (\n    <View style={styles.container}>\n      <Text h1></Text>\n      \n      <Input\n        placeholder=\"email\"\n        leftIcon={{ type: 'font-awesome', name: '' }}\n        onChangeText={value => setEmail(value)}\n        keyboardType=\"email-address\"\n        />\n\n      <Input\n        placeholder=\"senha\"\n        leftIcon={{ type: 'font-awesome', name: '' }}\n        onChangeText={value => setPassword(value)}\n        secureTextEntry={true}\n        />\n\n<Button\n                title={'Salvar'}\n                containerStyle={{\n                  width: 200,\n                  marginHorizontal: 50,\n                  marginVertical: 10,\n                }}\n              />\n\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}