{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, Input, Text, Header, icon, Image, TabView, Tab } from 'react-native-elements';\nimport { useState, useEffect } from 'react';\nimport { KeyboardAvoidingView } from 'native-base';\nimport { enableExpoCliLogging } from 'expo/build/logs/Logs';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { initializeApp } from \"firebase/app\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function lista(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dados = _useState2[0],\n      setDados = _useState2[1];\n\n  useEffect(function () {\n    function resgatarDados() {\n      axios.get('http://professornilson.com/testeservico/clientes').then(function (response) {\n        setDados(response.data);\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    resgatarDados();\n  });\n  var list = [{\n    name: 'Marcos Andrade',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n    subtitle: '81 988553424'\n  }, {\n    name: 'Patrícia Tavares',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n    subtitle: '81 9987655332'\n  }, {\n    name: 'Rodrigo Antunes',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n    subtitle: '81 987765525'\n  }, {\n    name: 'Pedro Henrique',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n    subtitle: '81 986693221'\n  }, {\n    name: 'Nilson',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n    subtitle: '81 995632578'\n  }, {\n    name: 'Machado de Assis',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n    subtitle: '81 988551839'\n  }, {\n    name: 'Paulo Andre',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n    subtitle: '81 985251535'\n  }, {\n    name: 'Silva dos Santos',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n    subtitle: '81 981146578'\n  }, {\n    name: 'Caetano Veloso',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n    subtitle: '81 985263779'\n  }, {\n    name: 'Melo Neto',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n    subtitle: '81 999982178'\n  }];\n  return _jsx(View, {\n    children: _jsxs(ScrollView, {\n      children: [_jsx(Header, {\n        centerComponent: {\n          text: 'Lista de Contatos',\n          style: {\n            color: '#fff'\n          }\n        },\n        rightComponent: {\n          icon: 'plus',\n          type: 'font-awesome',\n          color: '#fff',\n          onPress: function onPress() {\n            return navigation.navigate('Contato');\n          }\n        }\n      }), dados.map(function (l, i) {\n        return _jsxs(ListItem, {\n          bottomDivider: true,\n          children: [_jsx(Avatar, {\n            source: {\n              uri: 'https://cdn.pixabay.com/photo/2018/08/28/13/29/avatar-3637561_960_720.png'\n            }\n          }), _jsxs(ListItem.Content, {\n            children: [_jsx(ListItem.Title, {\n              children: l.nome\n            }), _jsx(ListItem.Subtitle, {\n              children: l.telefone\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return navigation.navigate('AEContato', {\n                  nome: linha.nome,\n                  telefone: linha.telefone,\n                  cpf: linha.cpf\n                });\n              }\n            })]\n          })]\n        }, i);\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/priscila/meuapp/screens/ListaContatos.js"],"names":["StatusBar","NavigationContainer","createNativeStackNavigator","Button","Input","Text","Header","icon","Image","TabView","Tab","useState","useEffect","KeyboardAvoidingView","enableExpoCliLogging","ListItem","Avatar","initializeApp","axios","lista","route","navigation","dados","setDados","resgatarDados","get","then","response","data","console","log","catch","error","list","name","avatar_url","subtitle","text","style","color","type","onPress","navigate","map","l","i","uri","nome","telefone","linha","cpf","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4CC,KAA5C,EAAmDC,OAAnD,EAA4DC,GAA5D,QAAuE,uBAAvE;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,oBAAT,QAAqC,aAArC;AACA,SAASC,oBAAT,QAAqC,sBAArC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,uBAAjC;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,eAAe,SAASC,KAAT,OAAoC;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAEjD,kBAAyBV,QAAQ,CAAC,EAAD,CAAjC;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAaC,QAAb;;AAEAX,EAAAA,SAAS,CAAC,YAAI;AACV,aAASY,aAAT,GAAwB;AACtBN,MAAAA,KAAK,CAACO,GAAN,CAAU,kDAAV,EACCC,IADD,CACM,UAAUC,QAAV,EAAoB;AACxBJ,QAAAA,QAAQ,CAACI,QAAQ,CAACC,IAAV,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,OAJD,EAKCI,KALD,CAKO,UAAUC,KAAV,EAAiB;AACtBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OAPD;AAQD;;AACDR,IAAAA,aAAa;AAChB,GAZQ,CAAT;AAcA,MAAMS,IAAI,GAAG,CACX;AACEC,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA,UAAU,EAAE,iEAFd;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GADW,EAMX;AACEF,IAAAA,IAAI,EAAE,kBADR;AAEEC,IAAAA,UAAU,EAAE,sEAFd;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GANW,EAWX;AACEF,IAAAA,IAAI,EAAE,iBADR;AAEEC,IAAAA,UAAU,EAAE,sEAFd;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GAXW,EAgBX;AACEF,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA,UAAU,EAAE,iEAFd;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GAhBW,EAqBX;AACEF,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,UAAU,EAAE,iEAFd;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GArBW,EA0BX;AACEF,IAAAA,IAAI,EAAE,kBADR;AAEEC,IAAAA,UAAU,EAAE,iEAFd;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GA1BW,EA+BX;AACEF,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,UAAU,EAAE,sEAFd;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GA/BW,EAoCX;AACEF,IAAAA,IAAI,EAAE,kBADR;AAEEC,IAAAA,UAAU,EAAE,sEAFd;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GApCW,EAyCX;AACEF,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA,UAAU,EAAE,iEAFd;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GAzCW,EA8CX;AACEF,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,UAAU,EAAE,iEAFd;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GA9CW,CAAb;AAsDA,SACE,KAAC,IAAD;AAAA,cACE,MAAC,UAAD;AAAA,iBACF,KAAC,MAAD;AAEE,QAAA,eAAe,EAAE;AAAEC,UAAAA,IAAI,EAAE,mBAAR;AAA6BC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT;AAApC,SAFnB;AAGE,QAAA,cAAc,EAAE;AAAEhC,UAAAA,IAAI,EAAE,MAAR;AAAgBiC,UAAAA,IAAI,EAAE,cAAtB;AAAuCD,UAAAA,KAAK,EAAE,MAA9C;AAAuDE,UAAAA,OAAO,EAAC;AAAA,mBAAMpB,UAAU,CAACqB,QAAX,CAAoB,SAApB,CAAN;AAAA;AAA/D;AAHlB,QADE,EASFpB,KAAK,CAACqB,GAAN,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,eACR,MAAC,QAAD;AAAkB,UAAA,aAAa,MAA/B;AAAA,qBACE,KAAC,MAAD;AAAQ,YAAA,MAAM,EAAE;AAACC,cAAAA,GAAG,EAAE;AAAN;AAAhB,YADF,EAGE,MAAC,QAAD,CAAU,OAAV;AAAA,uBACA,KAAC,QAAD,CAAU,KAAV;AAAA,wBAAiBF,CAAC,CAACG;AAAnB,cADA,EAEE,KAAC,QAAD,CAAU,QAAV;AAAA,wBAAoBH,CAAC,CAACI;AAAtB,cAFF,EAGA,KAAC,gBAAD;AACQ,cAAA,OAAO,EAAE;AAAA,uBAAM3B,UAAU,CAACqB,QAAX,CAAoB,WAApB,EAAiC;AAChDK,kBAAAA,IAAI,EAACE,KAAK,CAACF,IADqC;AAEhDC,kBAAAA,QAAQ,EAACC,KAAK,CAACD,QAFiC;AAGhDE,kBAAAA,GAAG,EAACD,KAAK,CAACC;AAHsC,iBAAjC,CAAN;AAAA;AADjB,cAHA;AAAA,YAHF;AAAA,WAAeL,CAAf,CADQ;AAAA,OAAV,CATE;AAAA;AADF,IADF;AAqCD;AAED,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View, TouchableOpacity, ScrollView } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, Input, Text, Header, icon, Image, TabView, Tab } from 'react-native-elements';\nimport { useState, useEffect } from 'react';\nimport { KeyboardAvoidingView } from 'native-base';\nimport { enableExpoCliLogging } from 'expo/build/logs/Logs';\nimport { ListItem, Avatar } from 'react-native-elements'\nimport { initializeApp } from \"firebase/app\";\nimport axios from 'axios';\n\n\nexport default function lista({route, navigation}) {\n\n  const [dados,setDados] = useState([]);\n\n  useEffect(()=>{\n      function resgatarDados(){\n        axios.get('http://professornilson.com/testeservico/clientes')\n        .then(function (response) {\n          setDados(response.data);\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      }\n      resgatarDados();\n  })\n\n  const list = [\n    {\n      name: 'Marcos Andrade',\n      avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n      subtitle: '81 988553424'\n    },\n    {\n      name: 'Patrícia Tavares',\n      avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n      subtitle: '81 9987655332'\n    },\n    {\n      name: 'Rodrigo Antunes',\n      avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n      subtitle: '81 987765525'\n    },\n    {\n      name: 'Pedro Henrique',\n      avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n      subtitle: '81 986693221'\n    },\n    {\n      name: 'Nilson',\n      avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n      subtitle: '81 995632578'\n    },\n    {\n      name: 'Machado de Assis',\n      avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n      subtitle: '81 988551839'\n    },\n    {\n      name: 'Paulo Andre',\n      avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n      subtitle: '81 985251535'\n    },\n    {\n      name: 'Silva dos Santos',\n      avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n      subtitle: '81 981146578'\n    },\n    {\n      name: 'Caetano Veloso',\n      avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n      subtitle: '81 985263779'\n    },\n    {\n      name: 'Melo Neto',\n      avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n      subtitle: '81 999982178'\n    }\n\n  ]\n\n  return (\n    <View>\n      <ScrollView>\n    <Header\n     \n      centerComponent={{ text: 'Lista de Contatos', style: { color: '#fff' } }}\n      rightComponent={{ icon: 'plus', type: 'font-awesome',  color: '#fff',  onPress:() => navigation.navigate('Contato')  }}\n    />\n  \n\n  {\n    dados.map((l, i) => (\n      <ListItem key={i} bottomDivider>\n        <Avatar source={{uri: 'https://cdn.pixabay.com/photo/2018/08/28/13/29/avatar-3637561_960_720.png'}} />\n        \n        <ListItem.Content>\n        <ListItem.Title>{l.nome}</ListItem.Title>\n          <ListItem.Subtitle>{l.telefone}</ListItem.Subtitle>\n        <TouchableOpacity\n                onPress={() => navigation.navigate('AEContato', {\n                nome:linha.nome,\n                telefone:linha.telefone,\n                cpf:linha.cpf,\n              \n              })}  \n                >\n          \n          </TouchableOpacity>\n        </ListItem.Content>\n      </ListItem>\n    ))\n  }\n    </ScrollView>\n</View>\n  );\n\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}